{"mappings":"ACIA,IAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAQ,SAAS,aAAa,CAAC,UAK/B,EAAU,WAAM,OAAA,SAAS,gBAAgB,CAAC,K,EAE1C,EAAsB,WAG1B,OAAO,AAFM,IAED,MAAM,AACpB,EAEM,EAAwB,WAI5B,OAAO,AAHM,GAGF,CAAC,AAFa,IAEM,EAAE,CAAC,KAAK,CAAC,MAAM,AAChD,EAEA,SAAS,IACP,IAAM,EAAkB,IAClB,EAAoB,GAE1B,CAAA,EAAU,QAAQ,CAAG,GAtBA,GAuBrB,EAAU,QAAQ,CAAG,GAtBA,EAuBrB,EAAa,QAAQ,CAAG,GAxBH,GAyBrB,EAAa,QAAQ,CAAG,GAxBH,CAyBvB,CA8CA,EAAU,gBAAgB,CAAC,QAxBF,WACvB,IAAM,EAAO,IAEP,EAAS,AADC,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CACd,SAAS,CAAC,CAAA,GAC3B,EAAY,EAAM,OAAO,CAAC,EAAE,AApDb,CAAA,KAsDjB,MACF,EAAU,WAAW,CAAC,GAEtB,IAEJ,GAcA,EAAU,gBAAgB,CAAC,QAZF,WACvB,IAAM,EAAO,IACP,EAAU,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,AA9DhB,CAAA,IAgEjB,MACF,EAAQ,MAAM,GAEd,IAEJ,GAIA,EAAa,gBAAgB,CAAC,QA9CH,WACzB,IAAM,EAAO,GA7BQ,CAAA,KA+BjB,MACF,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAI,UAAU,CAAC,G,GAErC,IAEJ,GAuCA,EAAa,gBAAgB,CAAC,QArCF,WAC1B,IAAM,EAAO,GAtCQ,CAAA,IAwCjB,MACF,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAI,UAAU,CAAC,G,GAErC,IAEJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\".field\");\nvar MAX_SIZE_LIMIT = 10;\nvar MIN_SIZE_LIMIT = 2;\nvar getRows = function() {\n    return document.querySelectorAll(\"tr\");\n};\nvar getCurrentRowsLimit = function() {\n    var rows = getRows();\n    return rows.length;\n};\nvar getCurrentColumnsSize = function() {\n    var rows = getRows();\n    var currentRowsLimit = getCurrentRowsLimit();\n    return rows[currentRowsLimit - 1].cells.length;\n};\nfunction updateButtons() {\n    var currentRowsSize = getCurrentRowsLimit();\n    var currentColumnSize = getCurrentColumnsSize();\n    appendRow.disabled = currentRowsSize >= MAX_SIZE_LIMIT;\n    removeRow.disabled = currentRowsSize <= MIN_SIZE_LIMIT;\n    appendColumn.disabled = currentColumnSize >= MAX_SIZE_LIMIT;\n    removeColumn.disabled = currentColumnSize <= MIN_SIZE_LIMIT;\n}\nvar onAppendColumnClik = function() {\n    var rows = getRows();\n    if (getCurrentColumnsSize() !== MAX_SIZE_LIMIT) {\n        rows.forEach(function(row) {\n            return row.insertCell(-1);\n        });\n        updateButtons();\n    }\n};\nvar onRemoveColumnClick = function() {\n    var rows = getRows();\n    if (getCurrentColumnsSize() !== MIN_SIZE_LIMIT) {\n        rows.forEach(function(row) {\n            return row.deleteCell(-1);\n        });\n        updateButtons();\n    }\n};\nvar onAppendRowClick = function() {\n    var rows = getRows();\n    var lastRow = rows[rows.length - 1];\n    var newRow = lastRow.cloneNode(true);\n    var tableBody = table.tBodies[0];\n    if (getCurrentRowsLimit() !== MAX_SIZE_LIMIT) {\n        tableBody.appendChild(newRow);\n        updateButtons();\n    }\n};\nvar onRemoveRowClick = function() {\n    var rows = getRows();\n    var lastRow = rows[rows.length - 1];\n    if (getCurrentRowsLimit() !== MIN_SIZE_LIMIT) {\n        lastRow.remove();\n        updateButtons();\n    }\n};\nappendRow.addEventListener(\"click\", onAppendRowClick);\nremoveRow.addEventListener(\"click\", onRemoveRowClick);\nappendColumn.addEventListener(\"click\", onAppendColumnClik);\nremoveColumn.addEventListener(\"click\", onRemoveColumnClick);\n\n//# sourceMappingURL=index.58658a62.js.map\n","'use strict';\n\n// write code here\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('.field');\n\nconst MAX_SIZE_LIMIT = 10;\nconst MIN_SIZE_LIMIT = 2;\n\nconst getRows = () => document.querySelectorAll('tr');\n\nconst getCurrentRowsLimit = () => {\n  const rows = getRows();\n\n  return rows.length;\n};\n\nconst getCurrentColumnsSize = () => {\n  const rows = getRows();\n  const currentRowsLimit = getCurrentRowsLimit();\n\n  return rows[currentRowsLimit - 1].cells.length;\n};\n\nfunction updateButtons() {\n  const currentRowsSize = getCurrentRowsLimit();\n  const currentColumnSize = getCurrentColumnsSize();\n\n  appendRow.disabled = currentRowsSize >= MAX_SIZE_LIMIT;\n  removeRow.disabled = currentRowsSize <= MIN_SIZE_LIMIT;\n  appendColumn.disabled = currentColumnSize >= MAX_SIZE_LIMIT;\n  removeColumn.disabled = currentColumnSize <= MIN_SIZE_LIMIT;\n}\n\nconst onAppendColumnClik = () => {\n  const rows = getRows();\n\n  if (getCurrentColumnsSize() !== MAX_SIZE_LIMIT) {\n    rows.forEach((row) => row.insertCell(-1));\n\n    updateButtons();\n  }\n};\n\nconst onRemoveColumnClick = () => {\n  const rows = getRows();\n\n  if (getCurrentColumnsSize() !== MIN_SIZE_LIMIT) {\n    rows.forEach((row) => row.deleteCell(-1));\n\n    updateButtons();\n  }\n};\n\nconst onAppendRowClick = () => {\n  const rows = getRows();\n  const lastRow = rows[rows.length - 1];\n  const newRow = lastRow.cloneNode(true);\n  const tableBody = table.tBodies[0];\n\n  if (getCurrentRowsLimit() !== MAX_SIZE_LIMIT) {\n    tableBody.appendChild(newRow);\n\n    updateButtons();\n  }\n};\n\nconst onRemoveRowClick = () => {\n  const rows = getRows();\n  const lastRow = rows[rows.length - 1];\n\n  if (getCurrentRowsLimit() !== MIN_SIZE_LIMIT) {\n    lastRow.remove();\n\n    updateButtons();\n  }\n};\n\nappendRow.addEventListener('click', onAppendRowClick);\nremoveRow.addEventListener('click', onRemoveRowClick);\nappendColumn.addEventListener('click', onAppendColumnClik);\nremoveColumn.addEventListener('click', onRemoveColumnClick);\n"],"names":["appendRow","document","querySelector","removeRow","appendColumn","removeColumn","table","getRows","querySelectorAll","getCurrentRowsLimit","rows","length","getCurrentColumnsSize","currentRowsLimit","cells","updateButtons","currentRowsSize","currentColumnSize","disabled","addEventListener","newRow","lastRow","cloneNode","tableBody","tBodies","appendChild","remove","forEach","row","insertCell","deleteCell"],"version":3,"file":"index.58658a62.js.map"}